<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_toby</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>toby_speed = 5;
desliza = false;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//movimiento del personaje
if desliza == false 
{
    obj_toby.image_speed = 0.5;
    switch(keyboard_key)
    {
        case vk_right:
            hspeed = toby_speed;
            obj_toby.sprite_index = spr_toby_mov_der;
            break;
        case vk_left:
            hspeed = -toby_speed;
            obj_toby.sprite_index = spr_toby_mov_izq;
            break
        case vk_up:
            vspeed = -toby_speed;
            obj_toby.sprite_index = spr_toby_mov_up;
            break;
        case vk_down:
            vspeed = toby_speed;
            obj_toby.sprite_index = spr_toby_mov_dow
    }
}



if (keyboard_check_released(vk_right) or keyboard_check_released(vk_left) )
{
    hspeed  = 0
    if hspeed &gt; 0
        obj_toby.sprite_index = spr_toby_mov_der.sprite_index = 0;
    if hspeed &lt; 0
        obj_toby.sprite_index = spr_toby_mov_dow.sprite_index = 0;
    obj_toby.image_speed = 0;
}
if (keyboard_check_released(vk_up) or keyboard_check_released(vk_down) )
{
    vspeed = 0;
    if vspeed &gt; 0
        obj_toby.sprite_index = spr_toby_mov_up.sprite_index = 0;
    if vspeed &lt; 0
        obj_toby.sprite_index = spr_toby_mov_dow.sprite_index = 0;
    obj_toby.image_speed = 0;
}


//colision con el piso, solo aplica para hielo y niveles resbaladizos

if(CONTROL.hielo == 1)
{
    if place_meeting(x,y,obj_hielo_desliza) and (desliza == false or desliza == true)
    {
        speed = toby_speed*3;
        desliza = true;
    }
    if !place_meeting(x,y,obj_hielo_desliza) and desliza == true
    {
        desliza = false;
        speed = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
